name: build

on:
  pull_request:
  push:
    branches:
      - 'main'
      - 'legacy'

env:
  SRC_DIR: discopy 
  TEST_DIR: test

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.8, 3.9, "3.10" ]
    steps:
    - uses: actions/checkout@v3
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install linter
      run:
        python -m pip install pycodestyle coverage
    - name: Check for errors
      run:
        # stop the build if there are Python syntax errors or undefined names
        pycodestyle .
  build_and_test:
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.8, 3.9, "3.10" ]
    steps:
    - uses: actions/checkout@v3
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install base package
      run: pip install .
    - name: Install coverage and pytest 
      run:
        python -m pip install coverage pytest
    - name: Install test dependencies 
      run: |
        pip install torch --index-url https://download.pytorch.org/whl/cpu  # Install PyTorch without CUDA
        python -m pip install -r ${{ env.TEST_DIR }}/requirements.txt
    - name: Test with pytest
      run:
        coverage run --source=${{ env.SRC_DIR }} -m pytest ${{ env.SRC_DIR }} ${{ env.TEST_DIR }} --doctest-modules
    - name: Coverage report
      run:
        coverage report --fail-under=100 --show-missing
