# -*- coding: utf-8 -*-
import networkx as nx
from discopy import monoidal


class Arrow(monoidal.Bubble):
    """
    The monoidal signature based on a directed graph
    An arrow in the free category generated by the signature
    """
    def __init__(self, graph: nx.DiGraph):
        nodes = sorted(graph.nodes)
        dom = monoidal.Ty(*(n for n in nodes if graph.in_degree(n) > 0))
        cod = monoidal.Ty(*(n for n in nodes if graph.out_degree(n) > 0))
        inside = monoidal.Id().tensor(*(Box(graph, node) for node in nodes))
        super().__init__(inside)


class Box(monoidal.Box):
    """
    The monoidal signature based on a directed graph
    An arrow in the free category generated by the signature
    """
    def __init__(self, graph: nx.DiGraph, node: str, ):
        super().__init__(
            node,
            monoidal.Ty(*sorted(graph.predecessors(node))),
            monoidal.Ty(*sorted(graph.successors(node))))
